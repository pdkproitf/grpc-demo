# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: greeting.proto for package 'greet'

require 'grpc'
require 'greeting_pb'

module Greet
  module GreetService
    # The greeting service definition.
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'greet.GreetService'

      # Sends a greeting
      rpc :SayHello, ::Greet::GreetRequest, ::Greet::GreetResponse
      rpc :SayHelloManyTimes, ::Greet::GreetRequest, stream(::Greet::GreetResponse)
      rpc :SayHelloAllAtOnce, stream(::Greet::GreetRequest), ::Greet::GreetResponse
      rpc :sayHelloOneByOne, stream(::Greet::GreetRequest), stream(::Greet::GreetResponse)
    end

    Stub = Service.rpc_stub_class
  end
end
